{"version":3,"sources":["../node_modules/classnames/index.js","component/route/RouteIndicator.tsx","view/stops/components/SubNav.tsx","view/stops/components/NearbyRoutes.tsx"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","RouteIndicator","props","_this","Object","_Users_jnyeholt_code_trimet_arrivals_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_jnyeholt_code_trimet_arrivals_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_jnyeholt_code_trimet_arrivals_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","onClick","route","_this$props","routeId","className","verbose","style","route-indicator-blue","BLUE_LINE_NUMBER","route-indicator-cyan","STREETCAR_A_LOOP","STREETCAR_CL_LINE_SHUTTLE","route-indicator-green","GREEN_LINE_NUMBER","route-indicator-lightgreen","STREETCAR_S_LINE","route-indicator-orange","ORANGE_LINE_NUMBER","route-indicator-pink","STREETCAR_B_LOOP","route-indicator-red","RED_LINE_NUMBER","route-indicator-yellow","YELLOW_LINE_NUMBER","cx","getRouteIndicatorClassName","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","verboseRouteDisplay","routeFound","ROUTE_DISPLAY","react_fontawesome__WEBPACK_IMPORTED_MODULE_7___default","name","getRouteDisplay","React","PureComponent","SubNav","stopCount","routeCount","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component","NearbyRoutes","react__WEBPACK_IMPORTED_MODULE_7___default","_SubNav__WEBPACK_IMPORTED_MODULE_12__","id","getRoutes","nearbyRoutes","routes","map","route-blue","route-cyan","route-green","route-lightgreen","route-orange","route-pink","route-red","route-yellow","routeInfo","_component_route_RouteIndicator__WEBPACK_IMPORTED_MODULE_10__","routeDirections","routeDirection","directionId","react_fontawesome__WEBPACK_IMPORTED_MODULE_8___default","description"],"mappings":"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","file":"static/js/200.8889c108.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import cx from \"classnames\";\nimport React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport {\n  BLUE_LINE_NUMBER,\n  GREEN_LINE_NUMBER,\n  ORANGE_LINE_NUMBER,\n  RED_LINE_NUMBER,\n  ROUTE_DISPLAY,\n  STREETCAR_A_LOOP,\n  STREETCAR_B_LOOP,\n  STREETCAR_CL_LINE_SHUTTLE,\n  STREETCAR_S_LINE,\n  YELLOW_LINE_NUMBER\n} from \"../../api/trimet/constants\";\nimport { Route } from \"../../api/trimet/types\";\nimport \"./RouteIndicator.scss\";\n\ninterface Props {\n  routeId: number;\n  route: Route;\n  className?: string;\n  onClick: (route: Route) => void;\n  verbose?: boolean;\n}\n\nfunction getRouteDisplay(route: number, verboseRouteDisplay: boolean) {\n  const routeFound = ROUTE_DISPLAY[route];\n\n  if (!routeFound) {\n    if (route) {\n      return (\n        <span>\n          <FontAwesome name=\"bus\" className=\"train-route-indicator\" />\n          <span>\n            {route} {verboseRouteDisplay && \"Bus\"}\n          </span>\n        </span>\n      );\n    }\n    return route || \"-\";\n  } else {\n    return (\n      <span>\n        <FontAwesome name=\"train\" className=\"train-route-indicator\" />\n        <span>{routeFound}</span>\n      </span>\n    );\n  }\n}\n\nfunction getRouteIndicatorClassName(route: number, className: string) {\n  const style = {\n    \"route-indicator-blue\": route === BLUE_LINE_NUMBER,\n    \"route-indicator-cyan\":\n      route === STREETCAR_A_LOOP || route === STREETCAR_CL_LINE_SHUTTLE,\n    \"route-indicator-green\": route === GREEN_LINE_NUMBER,\n    \"route-indicator-lightgreen\": route === STREETCAR_S_LINE,\n    \"route-indicator-orange\": route === ORANGE_LINE_NUMBER,\n    \"route-indicator-pink\": route === STREETCAR_B_LOOP,\n    \"route-indicator-red\": route === RED_LINE_NUMBER,\n    \"route-indicator-yellow\": route === YELLOW_LINE_NUMBER\n  };\n\n  return cx(\"route-indicator\", className, style);\n}\n\nexport default class RouteIndicator extends React.PureComponent<Props> {\n  private onClick: () => void;\n\n  constructor(props) {\n    super(props);\n\n    this.onClick = () => this.props.onClick(this.props.route);\n  }\n\n  public render() {\n    const { routeId, className, verbose } = this.props;\n    const classNames = getRouteIndicatorClassName(routeId, className);\n\n    return (\n      <span className={classNames} onClick={this.onClick}>\n        {getRouteDisplay(routeId, verbose)}\n      </span>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./SubNav.scss\";\n\ninterface Props {\n  stopCount: number;\n  routeCount: number;\n}\n\nexport default class SubNav extends Component<Props> {\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    const { stopCount, routeCount } = this.props;\n\n    return (\n      <nav className=\"nearby-routes-nav\">\n        <ul>\n          <NavLink to={`/nearby/routes`}>Routes ({routeCount})</NavLink>\n          <NavLink to={`/nearby/stops`}>Stops ({stopCount})</NavLink>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import cx from \"classnames\";\nimport { map } from \"lodash\";\nimport React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport {\n  BLUE_LINE_NUMBER,\n  GREEN_LINE_NUMBER,\n  ORANGE_LINE_NUMBER,\n  RED_LINE_NUMBER,\n  STREETCAR_A_LOOP,\n  STREETCAR_B_LOOP,\n  STREETCAR_CL_LINE_SHUTTLE,\n  STREETCAR_S_LINE,\n  YELLOW_LINE_NUMBER\n} from \"../../../api/trimet/constants\";\nimport RouteIndicator from \"../../../component/route/RouteIndicator\";\nimport {\n  RouteAndRouteDirections,\n  RouteDirectionDict,\n  RouteDirectionsDict\n} from \"../../../store/reducers/util/getRoutesFromStopLocations\";\nimport \"./NearbyRoutes.scss\";\nimport SubNav from \"./SubNav\";\n\ninterface Props {\n  nearbyRoutes: RouteDirectionDict;\n  stopCount: number;\n  routeCount: number;\n}\n\nfunction getRouteIndicatorClassName(route: number, className: string) {\n  const style = {\n    \"route-blue\": route === BLUE_LINE_NUMBER,\n    \"route-cyan\":\n      route === STREETCAR_A_LOOP || route === STREETCAR_CL_LINE_SHUTTLE,\n    \"route-green\": route === GREEN_LINE_NUMBER,\n    \"route-lightgreen\": route === STREETCAR_S_LINE,\n    \"route-orange\": route === ORANGE_LINE_NUMBER,\n    \"route-pink\": route === STREETCAR_B_LOOP,\n    \"route-red\": route === RED_LINE_NUMBER,\n    \"route-yellow\": route === YELLOW_LINE_NUMBER\n  };\n\n  return cx(\"nearby-route\", className, style);\n}\n\nexport default class NearbyRoutes extends React.Component<Props> {\n  public static getRoutes(routes: RouteDirectionDict) {\n    return map(routes, (route: RouteAndRouteDirections) => {\n      const classNames = getRouteIndicatorClassName(\n        route.routeInfo.id,\n        \"route-header\"\n      );\n\n      return (\n        <div className={classNames}>\n          <h3 className=\"route-directions-indicator-wrapper\">\n            <RouteIndicator\n              routeId={route.routeInfo.id}\n              route={undefined}\n              onClick={undefined}\n              verbose={true}\n            />\n          </h3>\n          <ul className=\"route-directions-wrapper\">\n            {NearbyRoutes.routeDirections(route.routeDirections)}\n          </ul>\n        </div>\n      );\n    });\n  }\n\n  public static routeDirections(routeDirections: RouteDirectionsDict) {\n    return map(routeDirections, (routeDirection, directionId) => {\n      return (\n        <li className=\"route-direction\">\n          <span className=\"direction-circle-wrapper\">\n            <FontAwesome name=\"arrow-circle-right\" />\n          </span>\n          <span>{routeDirection.description}</span>\n        </li>\n      );\n    });\n  }\n\n  public render() {\n    return (\n      <div>\n        <SubNav\n          stopCount={this.props.stopCount}\n          routeCount={this.props.routeCount}\n        />\n        <div id=\"nearby-view-routes\">\n          {NearbyRoutes.getRoutes(this.props.nearbyRoutes)}\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}