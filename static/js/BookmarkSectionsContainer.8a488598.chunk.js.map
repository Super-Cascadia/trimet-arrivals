{"version":3,"sources":["store/action/bookmarkSectionActions.ts","view/bookmarks/component/bookmarkSections/AddBookmarkSectionControl.tsx","view/bookmarks/component/bookmarkSections/BookmarkSections.tsx","view/bookmarks/component/bookmarkSections/BookmarkSectionsComponent.tsx","view/bookmarks/container/BookmarkSectionsContainer.tsx"],"names":["__webpack_require__","d","__webpack_exports__","sectionNameUpdateRequest","createBookmarkSectionRequest","removeBookmarkSectionRequest","removeBookmarkFromSectionRequest","bookmarkSectionSelectRequest","addBookmarkToBookmarkSectionRequest","removeAllBookmarksInSectionRequest","updateBookmarkSectionNameRequest","_constants_bookmarkSections__WEBPACK_IMPORTED_MODULE_0__","name","payload","type","BOOKMARK_SECTION_NAME_UPDATE_REQUEST","CREATE_BOOKMARK_SECTION_REQUEST","bookmarkSectionId","REMOVE_BOOKMARK_SECTION_REQUEST","stopId","REMOVE_BOOKMARK_FROM_SECTION_REQUEST","selectedBookmarkSection","stopLocation","BOOKMARK_SECTION_SELECT_REQUEST","REMOVE_ALL_BOOKMARKS_IN_SECTION_REQUEST","bookmarkSectionName","UPDATE_BOOKMARK_SECTION_NAME_REQUEST","AddBookmarkSectionControl","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onChange","bind","assertThisInitialized","onClickAddBookmark","nextProps","setState","e","_this2","target","value","onSectionNameUpdate","stopPropagation","preventDefault","createBookmarkSection","noTextEntered","isEmpty","react_default","a","createElement","className","placeholder","onClick","disabled","Component","BookmarkSectionContainer","lazy","Promise","all","then","BookmarkSections","_ref","bookmarkSections","react","fallback","ComponentLoadIndicator","map","bookmarkSection","id","BookmarksViewComponent","_this$props","AddBookmarkSectionControl_AddBookmarkSectionControl","BookmarkSections_BookmarkSections","React","BookmarkSectionsContainer","connect","sectionNameInputSelector","bookmarkSectionSelectors","dispatch","BookmarkSectionsComponent"],"mappings":"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","file":"static/js/BookmarkSectionsContainer.8a488598.chunk.js","sourcesContent":["import { StopLocation } from \"../../api/trimet/types\";\nimport {\n  BOOKMARK_SECTION_NAME_UPDATE_REQUEST,\n  BOOKMARK_SECTION_SELECT_REQUEST,\n  CREATE_BOOKMARK_SECTION_REQUEST,\n  REMOVE_ALL_BOOKMARKS_IN_SECTION_REQUEST,\n  REMOVE_BOOKMARK_FROM_SECTION_REQUEST,\n  REMOVE_BOOKMARK_SECTION_REQUEST,\n  UPDATE_BOOKMARK_SECTION_NAME_REQUEST\n} from \"../constants/bookmarkSections\";\n\nexport const sectionNameUpdateRequest = (name: string) => ({\n  payload: { name },\n  type: BOOKMARK_SECTION_NAME_UPDATE_REQUEST\n});\n\nexport const createBookmarkSectionRequest = () => ({\n  type: CREATE_BOOKMARK_SECTION_REQUEST\n});\n\nexport const removeBookmarkSectionRequest = (bookmarkSectionId: number) => ({\n  payload: { bookmarkSectionId },\n  type: REMOVE_BOOKMARK_SECTION_REQUEST\n});\n\nexport const removeBookmarkFromSectionRequest = (\n  bookmarkSectionId: number,\n  stopId: number\n) => ({\n  payload: { bookmarkSectionId, stopId },\n  type: REMOVE_BOOKMARK_FROM_SECTION_REQUEST\n});\n\nexport const bookmarkSectionSelectRequest = (\n  selectedBookmarkSection: number,\n  stopLocation: StopLocation\n) => ({\n  payload: { selectedBookmarkSection, stopLocation },\n  type: BOOKMARK_SECTION_SELECT_REQUEST\n});\n\nexport const addBookmarkToBookmarkSectionRequest = (\n  selectedBookmarkSection: number,\n  stopId: StopLocation\n) => ({\n  payload: { selectedBookmarkSection, stopId },\n  type: BOOKMARK_SECTION_SELECT_REQUEST\n});\n\nexport const removeAllBookmarksInSectionRequest = (\n  bookmarkSectionId: number\n) => ({\n  payload: { bookmarkSectionId },\n  type: REMOVE_ALL_BOOKMARKS_IN_SECTION_REQUEST\n});\n\nexport const updateBookmarkSectionNameRequest = (\n  bookmarkSectionId: number,\n  bookmarkSectionName: string\n) => ({\n  payload: {\n    bookmarkSectionId,\n    bookmarkSectionName\n  },\n  type: UPDATE_BOOKMARK_SECTION_NAME_REQUEST\n});\n","import { isEmpty } from \"lodash\";\nimport React, { Component } from \"react\";\nimport \"./AddBookmarkSectionControl.css\";\n\ninterface Props {\n  onSectionNameUpdate: (name: string) => void;\n  bookmarkSectionName: string;\n  createBookmarkSection: () => void;\n}\n\ninterface State {\n  bookmarkSectionName: string;\n}\n\nexport default class AddBookmarkSectionControl extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bookmarkSectionName: props.bookmarkSectionName\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onClickAddBookmark = this.onClickAddBookmark.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: Readonly<Props>): void {\n    this.setState({\n      bookmarkSectionName: nextProps.bookmarkSectionName\n    });\n  }\n\n  public onChange(e) {\n    const name = e.target.value;\n\n    this.setState(\n      {\n        bookmarkSectionName: name\n      },\n      () => this.props.onSectionNameUpdate(name)\n    );\n  }\n\n  public onClickAddBookmark(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.props.createBookmarkSection();\n  }\n\n  public render() {\n    const noTextEntered = isEmpty(this.state.bookmarkSectionName);\n\n    return (\n      <div className=\"add-bookmark-section-control\">\n        <form className=\"add-bookmark-input-form\">\n          <div className=\"add-bookmark-name-input-flex-container\">\n            <input\n              type=\"text\"\n              className=\"add-bookmark-name-input\"\n              value={this.state.bookmarkSectionName}\n              placeholder=\"Bookmark Section Name\"\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"add-bookmark-button-flex-container\">\n            <button\n              onClick={this.onClickAddBookmark}\n              disabled={noTextEntered}\n              className=\"add-bookmark-button\"\n            >\n              Create\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import { isEmpty, map } from \"lodash\";\nimport React, { lazy, Suspense } from \"react\";\nimport ComponentLoadIndicator from \"../../../../component/loadIndicator/ComponentLoadIndicator\";\nimport {\n  BookmarkSectionProps,\n  BookmarkSectionsProps\n} from \"../../../../store/reducers/bookmarkSectionReducer\";\nimport \"./BookmarkSections.css\";\n\nconst BookmarkSectionContainer = lazy(() =>\n  import(\"../../container/BookmarkSectionContainer\")\n);\n\ninterface Props {\n  bookmarkSections: BookmarkSectionsProps;\n}\n\nexport default function BookmarkSections({ bookmarkSections }: Props) {\n  if (isEmpty(bookmarkSections)) {\n    return (\n      <div className=\"bookmark-section-message\">\n        Add a bookmark section to begin organizing bookmarks.\n      </div>\n    );\n  }\n\n  return (\n    <Suspense fallback={ComponentLoadIndicator()}>\n      <div className=\"bookmark-section-list\">\n        {map(\n          bookmarkSections,\n          (bookmarkSection: BookmarkSectionProps, id: number) => {\n            return <BookmarkSectionContainer bookmarkSectionId={id} />;\n          }\n        )}\n      </div>\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport { BookmarkSectionsProps } from \"../../../../store/reducers/bookmarkSectionReducer\";\nimport \"../BookmarksViewComponent.scss\";\nimport AddBookmarkSectionControl from \"./AddBookmarkSectionControl\";\nimport BookmarkSections from \"./BookmarkSections\";\n\ninterface Props {\n  onSectionNameUpdate: (name: string) => void;\n  bookmarkSectionName: string;\n  createBookmarkSection: () => void;\n  bookmarkSections: BookmarkSectionsProps;\n}\n\nexport default class BookmarksViewComponent extends React.Component<Props> {\n  public render() {\n    const {\n      bookmarkSectionName,\n      bookmarkSections,\n      createBookmarkSection,\n      onSectionNameUpdate\n    } = this.props;\n\n    return (\n      <div>\n        {/* <h1>Bookmark Sections</h1> */}\n        <AddBookmarkSectionControl\n          bookmarkSectionName={bookmarkSectionName}\n          createBookmarkSection={createBookmarkSection}\n          onSectionNameUpdate={onSectionNameUpdate}\n        />\n        <BookmarkSections bookmarkSections={bookmarkSections} />\n      </div>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport {\n  createBookmarkSectionRequest,\n  sectionNameUpdateRequest\n} from \"../../../store/action/bookmarkSectionActions\";\nimport { RootState } from \"../../../store/reducers\";\nimport {\n  bookmarkSectionSelectors,\n  sectionNameInputSelector\n} from \"../../../store/selectors/bookmarkSectionSelectors\";\nimport BookmarkSectionsComponent from \"../component/bookmarkSections/BookmarkSectionsComponent\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    bookmarkSectionName: sectionNameInputSelector(state),\n    bookmarkSections: bookmarkSectionSelectors(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSectionNameUpdate(name: string) {\n      dispatch(sectionNameUpdateRequest(name));\n    },\n    createBookmarkSection() {\n      dispatch(createBookmarkSectionRequest());\n    }\n  };\n};\n\nconst BookmarkSectionsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BookmarkSectionsComponent);\n\nexport default BookmarkSectionsContainer;\n"],"sourceRoot":""}