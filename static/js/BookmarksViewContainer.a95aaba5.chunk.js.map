{"version":3,"sources":["../node_modules/reselect/es/index.js","store/selectors/bookmarkSelectors.ts","store/selectors/bookmarkSectionSelectors.ts","store/selectors/stopSelectors.ts","store/action/viewActions.ts","view/bookmarks/component/BookmarksViewComponent.tsx","view/bookmarks/container/BookmarksViewContainer.tsx"],"names":["defaultEqualityCheck","a","b","__webpack_require__","d","__webpack_exports__","createSelector","memoize","_len","arguments","length","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","map","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","i","push","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","selectBookmarks","bookmarkedStopLocationsSelector","bookmarkedStopLocationSelector","bookmarkCountSelector","stopIsBookmarkedSelector","lodash__WEBPACK_IMPORTED_MODULE_0__","reselect__WEBPACK_IMPORTED_MODULE_1__","state","bookmarksReducer","bookmarks","stopLocation","isEmpty","Object","keys","locationId","sectionNameInputSelector","bookmarkSectionSelectors","bookmarkSectionNameSelector","bookmarksInSectionSelector","_bookmarkSelectors__WEBPACK_IMPORTED_MODULE_2__","selectSectionById","id","bookmarkSectionReducer","bookmarkSections","bookmarkInputSectionName","bookmarkSectionInputName","section","name","bookmarkedStops","stopId","stopsLoadingSelector","allStopLocationsSelector","allNearbyRoutesSelector","timeOfLastLoadSelector","stopLocationSelector","reselect__WEBPACK_IMPORTED_MODULE_0__","stopsReducer","loading","stopLocations","nearbyRoutes","timeOfLastLoad","onInitialLoadRequest","_constants__WEBPACK_IMPORTED_MODULE_0__","type","INITIAL_LOAD_REQUEST","StopContainer","lazy","Promise","all","e","then","bind","BookmarkSectionsContainer","MainNavigation","BookmarksViewComponent","this","props","onInitialLoad","_this$props","numberOfBookmarks","react_default","createElement","className","react","fallback","LoadIndicator","getBookmarkedStops","locid","key","showArrivals","React","Component","BookmarksViewContainer","connect","bookmarkSectionName","dispatch"],"mappings":"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","file":"static/js/BookmarksViewContainer.a95aaba5.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { isEmpty, map } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport { StopLocation } from \"../../api/trimet/types\";\nimport { RootState } from \"../reducers\";\nimport { StopLocations } from \"../reducers/bookmarksReducer\";\n\nexport const selectBookmarks = (state: RootState) =>\n  state.bookmarksReducer.bookmarks;\nconst selectBookmarkedStop = (state: RootState, locationId: number) =>\n  state.bookmarksReducer.bookmarks[locationId];\n\nexport const bookmarkedStopLocationsSelector = createSelector(\n  selectBookmarks,\n  (bookmarks: StopLocations) => bookmarks\n);\n\nexport const bookmarkedStopLocationSelector = createSelector(\n  selectBookmarks,\n  (bookmarks: StopLocations) =>\n    map(bookmarks, (stopLocation: StopLocation) => stopLocation)\n);\n\nexport const bookmarkCountSelector = createSelector(\n  selectBookmarks,\n  (bookmarks: StopLocations) =>\n    !isEmpty(bookmarks) && Object.keys(bookmarks).length\n);\n\nexport const stopIsBookmarkedSelector = createSelector(\n  selectBookmarkedStop,\n  (stopLocation: StopLocation) => !isEmpty(stopLocation)\n);\n","import { map } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport { RootState } from \"../reducers\";\nimport {\n  BookmarkSectionProps,\n  BookmarkSectionsProps\n} from \"../reducers/bookmarkSectionReducer\";\nimport { selectBookmarks } from \"./bookmarkSelectors\";\n\nconst selectSectionName = (state: RootState) => {\n  return state.bookmarkSectionReducer.bookmarkInputSectionName;\n};\n\nconst selectSections = (state: RootState) => {\n  return state.bookmarkSectionReducer.bookmarkSections;\n};\n\nconst selectSectionById = (state: RootState, id: number) => {\n  return state.bookmarkSectionReducer.bookmarkSections[id];\n};\n\nexport const sectionNameInputSelector = createSelector(\n  selectSectionName,\n  (bookmarkSectionInputName: string) => bookmarkSectionInputName\n);\n\nexport const bookmarkSectionSelectors = createSelector(\n  selectSections,\n  (bookmarkSections: BookmarkSectionsProps) => bookmarkSections\n);\n\nexport const bookmarkSectionNameSelector = createSelector(\n  selectSectionById,\n  (section: BookmarkSectionProps) => section.name\n);\n\nexport const bookmarksInSectionSelector = createSelector(\n  [selectSectionById, selectBookmarks],\n  (section: BookmarkSectionProps, bookmarks) => {\n    return map(section.bookmarkedStops, stopId => {\n      return bookmarks[stopId];\n    });\n  }\n);\n","import { createSelector } from \"reselect\";\nimport { StopLocation } from \"../../api/trimet/types\";\nimport { RootState } from \"../reducers\";\nimport {\n  RouteDirection,\n  RouteDirectionDict\n} from \"../reducers/util/getRoutesFromStopLocations\";\n\nconst allStopLocations = (state: RootState) => state.stopsReducer.stopLocations;\nconst allNearbyRoutes = (state: RootState) => state.stopsReducer.nearbyRoutes;\n\nconst stopLocationByLocationId = (state: RootState, locationId: number) =>\n  state.stopsReducer.stopLocations[locationId];\n\nconst stopsLoading = (state: RootState) => state.stopsReducer.loading;\n\nconst stopTimeOfLastLoadReducer = (state: RootState) =>\n  state.stopsReducer.timeOfLastLoad;\n\nexport const stopsLoadingSelector = createSelector(\n  stopsLoading,\n  (loading: boolean) => loading\n);\n\nexport const allStopLocationsSelector = createSelector(\n  allStopLocations,\n  (stopLocations: StopLocation[]) => stopLocations\n);\n\nexport const allNearbyRoutesSelector = createSelector(\n  allNearbyRoutes,\n  (nearbyRoutes: RouteDirectionDict) => nearbyRoutes\n);\n\nexport const timeOfLastLoadSelector = createSelector(\n  stopTimeOfLastLoadReducer,\n  (timeOfLastLoad: string) => timeOfLastLoad\n);\n\nexport const stopLocationSelector = createSelector(\n  stopLocationByLocationId,\n  (stopLocation: StopLocation) => stopLocation\n);\n","import { CHANGE_VIEW_REQUEST, INITIAL_LOAD_REQUEST } from \"../constants\";\n\nexport const changeViewRequest = (activeView: string) => ({\n  payload: { activeView },\n  type: CHANGE_VIEW_REQUEST\n});\n\nexport const onInitialLoadRequest = () => ({\n  type: INITIAL_LOAD_REQUEST\n});\n","import { isEmpty, map } from \"lodash\";\nimport React, { lazy, Suspense } from \"react\";\nimport { StopLocation } from \"../../../api/trimet/types\";\nimport LoadIndicator from \"../../../component/loadIndicator/LoadIndicator\";\nimport \"./BookmarksViewComponent.scss\";\n\nconst StopContainer = lazy(() =>\n  import(\n    /* webpackChunkName: \"StopContainer\" */ \"../../stops/containers/StopContainer\"\n  )\n);\nconst BookmarkSectionsContainer = lazy(() =>\n  import(\n    /* webpackChunkName: \"BookmarkSectionsContainer\" */ \"../container/BookmarkSectionsContainer\"\n  )\n);\nconst MainNavigation = lazy(() =>\n  import(\n    /* webpackChunkName: \"MainNavigation\" */ \"../../../component/nav/MainNavigation\"\n  )\n);\n\ninterface Props {\n  bookmarks: StopLocation[];\n  numberOfBookmarks: number;\n  timeOfLastLoad: string;\n  onInitialLoad: () => void;\n}\n\nexport default class BookmarksViewComponent extends React.Component<Props> {\n  public static getBookmarkedStops(bookmarks: StopLocation[]) {\n    if (isEmpty(bookmarks)) {\n      return (\n        <div className=\"no-bookmarks-container\">\n          Bookmark a stop and see it here.\n        </div>\n      );\n    }\n\n    return map(bookmarks, (stopLocation: StopLocation) => {\n      const locationId = stopLocation.locid;\n\n      return (\n        <div className=\"bookmark-stop-wrapper\">\n          <Suspense fallback={LoadIndicator}>\n            <StopContainer\n              key={locationId}\n              locationId={locationId}\n              showArrivals={false}\n            />\n          </Suspense>\n        </div>\n      );\n    });\n  }\n\n  public componentDidMount() {\n    this.props.onInitialLoad();\n  }\n\n  public render() {\n    const { bookmarks, numberOfBookmarks, timeOfLastLoad } = this.props;\n\n    return (\n      <div>\n        <MainNavigation\n          numberOfBookmarks={numberOfBookmarks}\n          timeOfLastLoad={timeOfLastLoad}\n        />\n        <main className=\"main-view\">\n          <section id=\"bookmarks-view-container\">\n            <div>\n              <Suspense fallback={LoadIndicator}>\n                <BookmarkSectionsContainer />\n              </Suspense>\n              <h1>Uncategorized Bookmarks</h1>\n              {BookmarksViewComponent.getBookmarkedStops(bookmarks)}\n            </div>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport { onInitialLoadRequest } from \"../../../store/action/viewActions\";\nimport { RootState } from \"../../../store/reducers\";\nimport {\n  bookmarkSectionSelectors,\n  sectionNameInputSelector\n} from \"../../../store/selectors/bookmarkSectionSelectors\";\nimport {\n  bookmarkCountSelector,\n  bookmarkedStopLocationsSelector\n} from \"../../../store/selectors/bookmarkSelectors\";\nimport { timeOfLastLoadSelector } from \"../../../store/selectors/stopSelectors\";\nimport BookmarksViewComponent from \"../component/BookmarksViewComponent\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    bookmarkSectionName: sectionNameInputSelector(state),\n    bookmarkSections: bookmarkSectionSelectors(state),\n    bookmarks: bookmarkedStopLocationsSelector(state),\n    numberOfBookmarks: bookmarkCountSelector(state),\n    timeOfLastLoad: timeOfLastLoadSelector(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitialLoad() {\n      dispatch(onInitialLoadRequest());\n    }\n  };\n};\n\nconst BookmarksViewContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BookmarksViewComponent);\n\nexport default BookmarksViewContainer;\n"],"sourceRoot":""}