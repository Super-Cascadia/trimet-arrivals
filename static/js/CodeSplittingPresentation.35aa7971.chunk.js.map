{"version":3,"sources":["view/CodeSplittingPresentation.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","CodeSplittingPresentation","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","a","createElement","id","href"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAEe,SAASD,IACtB,OACEE,EAAAE,EAAAC,cAAA,WACEH,EAAAE,EAAAC,cAAA,QAAMC,GAAG,gBACPJ,EAAAE,EAAAC,cAAA,qBACUH,EAAAE,EAAAC,cAAA,iBADV,iCAIAH,EAAAE,EAAAC,cAAA,WAEAH,EAAAE,EAAAC,cAAA,eACEH,EAAAE,EAAAC,cAAA,wBACAH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,oBADF,4DAESH,EAAAE,EAAAC,cAAA,yBAETH,EAAAE,EAAAC,cAAA,0JAKAH,EAAAE,EAAAC,cAAA,kHAIAH,EAAAE,EAAAC,cAAA,sDAC2CH,EAAAE,EAAAC,cAAA,4BAK/CH,EAAAE,EAAAC,cAAA,WAEAH,EAAAE,EAAAC,cAAA,eACEH,EAAAE,EAAAC,cAAA,qCACAH,EAAAE,EAAAC,cAAA,mJAKAH,EAAAE,EAAAC,cAAA,kJAMFH,EAAAE,EAAAC,cAAA,WAEAH,EAAAE,EAAAC,cAAA,eACEH,EAAAE,EAAAC,cAAA,qCACAH,EAAAE,EAAAC,cAAA,+BACAH,EAAAE,EAAAC,cAAA,2GAE8BH,EAAAE,EAAAC,cAAA,oCAF9B,uEAKAH,EAAAE,EAAAC,cAAA,yBACAH,EAAAE,EAAAC,cAAA,2HAEgD,IAC9CH,EAAAE,EAAAC,cAAA,KAAGE,KAAK,sDAAR,iDAHF,iGASAL,EAAAE,EAAAC,cAAA,6RAOAH,EAAAE,EAAAC,cAAA,uCACAH,EAAAE,EAAAC,cAAA,6NAQFH,EAAAE,EAAAC,cAAA,WAEAH,EAAAE,EAAAC,cAAA,eACEH,EAAAE,EAAAC,cAAA,2CACAH,EAAAE,EAAAC,cAAA,gHAIAH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,8BADF,wDAIAH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,mCADF,yEAIAH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,+BADF,oCAMJH,EAAAE,EAAAC,cAAA,WAEAH,EAAAE,EAAAC,cAAA,eACEH,EAAAE,EAAAC,cAAA,uCAEAH,EAAAE,EAAAC,cAAA,SACEH,EAAAE,EAAAC,cAAA,kBADF,+FAEuCH,EAAAE,EAAAC,cAAA,oBAFvC,OAE6D,IAC3DH,EAAAE,EAAAC,cAAA,wBAHF,oEAIuBH,EAAAE,EAAAC,cAAA,yBAGvBH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,KAAGE,KAAK,0DAAR,8BAIFL,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,KAAGE,KAAK,uEAAR,yCAMJL,EAAAE,EAAAC,cAAA,SACEH,EAAAE,EAAAC,cAAA,KAAGE,KAAK,iDACNL,EAAAE,EAAAC,cAAA,oBADF,6CADF,qLAQAH,EAAAE,EAAAC,cAAA,SACEH,EAAAE,EAAAC,cAAA,6BADF,gGAMFH,EAAAE,EAAAC,cAAA,WAEAH,EAAAE,EAAAC,cAAA,uBACAH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,UACEH,EAAAE,EAAAC,cAAA,KAAGE,KAAK,oGAAR","file":"static/js/CodeSplittingPresentation.35aa7971.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function CodeSplittingPresentation() {\n  return (\n    <div>\n      <main id=\"presentation\">\n        <h1>\n          Getting <i>Lazy</i> with Code Splitting in React\n        </h1>\n\n        <hr />\n\n        <section>\n          <h2>Background</h2>\n          <ul>\n            <li>\n              <b>Joe Hsu</b> asked if I wanted to give a talk at the frontend\n              guild. <b>I said yes.</b>\n            </li>\n            <li>\n              I happened to be working on a project that aimed to use to\n              code-splitting at AppNexus, so I decided to give a shot at\n              learning what I could.\n            </li>\n            <li>\n              I used a side-project I had been working on to explore the code\n              splitting tools available for React.\n            </li>\n            <li>\n              Yes, I wrote my presentation in the app. <i>For science!</i>\n            </li>\n          </ul>\n        </section>\n\n        <hr />\n\n        <section>\n          <h2>What is code splitting?</h2>\n          <p>\n            Code splitting is a technique in which code is separated into\n            various bundles that can be loaded on demand or in parallel by a\n            webapp.\n          </p>\n          <p>\n            It can be accomplished in several ways, and fundamentally relies on\n            the asynchronously loading of Javascript, CSS, and other assets.\n          </p>\n        </section>\n\n        <hr />\n\n        <section>\n          <h2>Why use code splitting?</h2>\n          <h3>What used to work</h3>\n          <p>\n            Previously, you could get by including a few vendor CDN scripts in\n            your head tag, and wait for <code>$.(document).ready()</code> in\n            your main.js file to be called. Sadly, but these days are gone.\n          </p>\n          <h3>The now now</h3>\n          <p>\n            As the expectation for feature-rich websites and applications has\n            grown, Javascript codebase sizes have grown &{\" \"}\n            <a href=\"https://speedcurve.com/blog/your-javascript-hurts/\">\n              demands on browser performance have increased\n            </a>\n            , which is especially bad for users on low-powered devices or with\n            slow internet connections.\n          </p>\n          <p>\n            Code splitting allows you to reduce demand on a users browser by\n            downloading only what they currently need. This also enables the\n            browser to cache assets in a more modular fashion, improving\n            performance on subsequent page loads, but only fetching things that\n            have changed.\n          </p>\n          <h3>Another tool in the chest</h3>\n          <p>\n            Being a good steward for users means being mindful of the\n            performance of your web application. Code splitting is just another\n            technique that enables you to do this, alongside other tried and\n            true techniques.\n          </p>\n        </section>\n\n        <hr />\n\n        <section>\n          <h2>How does code splitting work?</h2>\n          <p>\n            Code splitting takes a few different forms. Common approaches\n            include some or all of the following:\n          </p>\n          <ul>\n            <li>\n              <b>Vendor splitting:</b> Splitting out vendor code that doesn't\n              change often\n            </li>\n            <li>\n              <b>Entry point splitting:</b> Splitting on a page or app level\n              within a SPA or server-paged setup.\n            </li>\n            <li>\n              <b>Dynamic splitting:</b> Splitting via dynamic imports\n            </li>\n          </ul>\n        </section>\n\n        <hr />\n\n        <section>\n          <h1>Code Splitting with React</h1>\n\n          <p>\n            <b>React</b> introduced some new top-level API's in 16.6.0 to help\n            with code splitting. These API's are <code>lazy</code> and{\" \"}\n            <code>Suspense</code>, which are meant to be used in conjunction\n            with dynamic imports <code>import()</code>\n          </p>\n\n          <ul>\n            <li>\n              <a href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\">\n                React Code Splitting Docs\n              </a>\n            </li>\n            <li>\n              <a href=\"https://reactjs.org/blog/2018/03/01/sneak-peek-beyond-react-16.html\">\n                Dan Abramov's Suspense presentation\n              </a>\n            </li>\n          </ul>\n\n          <p>\n            <a href=\"https://webpack.js.org/guides/code-splitting/\">\n              <b>Webpack</b> also provides support for code splitting\n            </a>\n            , supporting vendor, entry point, and dynamic splitting. In\n            conjunction, React gives you a high-level literate API, that Webpack\n            can leverage to begin leveraging code splitting.\n          </p>\n          <p>\n            <b>Create React App</b> is configured to provide this functionality\n            by default. Let's take a look at how it works.\n          </p>\n        </section>\n\n        <hr />\n\n        <u>Resources:</u>\n        <ul>\n          <li>\n            <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/code-splitting/\">\n              Google Web: Reduce Javascript Payloads with Code Splitting\n            </a>\n          </li>\n        </ul>\n      </main>\n    </div>\n  );\n}\n"],"sourceRoot":""}