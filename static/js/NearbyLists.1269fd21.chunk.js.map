{"version":3,"sources":["view/stops/components/NearbyLists.tsx"],"names":["NearbyRoutes","lazy","__webpack_require__","e","then","bind","Stops","Promise","all","NearbyLists","_this$props","this","props","stopLocations","nearbyRoutes","openModal","stopCount","size","routeCount","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_6__","fallback","LoadIndicator","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","path","render","showArrivals","onRouteIndicatorClick","exact","React","Component"],"mappings":"0NAQMA,EAAeC,eAAK,kBAAMC,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,aAC1BC,EAAQL,eAAK,kBAAMM,QAAAC,IAAA,CAAAN,EAAAC,EAAA,GAAAD,EAAAC,EAAA,OAAAC,KAAAF,EAAAG,KAAA,aAaJI,mLACH,IAAAC,EACqCC,KAAKC,MAAhDC,EADMH,EACNG,cAAeC,EADTJ,EACSI,aAAcC,EADvBL,EACuBK,UAC/BC,EAAYC,eAAKJ,GACjBK,EAAaD,eAAKH,GAGxB,OACEK,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,SAAUC,WAClBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,KAAI,iBACJC,OAAQ,kBACNR,EAAAC,EAAAC,cAACrB,EAAD,CACEc,aAAcA,EACdE,UAAWA,EACXE,WAAYA,OAIlBC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,KAAI,gBACJC,OAAQ,kBACNR,EAAAC,EAAAC,cAACf,EAAD,CACEO,cAAeA,EACfe,cAAc,EACdC,sBAAuBd,EACvBC,UAAWA,EACXE,WAAYA,OAIlBC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEK,OAAO,EACPJ,KAAI,UACJC,OAAQ,kBACNR,EAAAC,EAAAC,cAACrB,EAAD,CACEc,aAAcA,EACdE,UAAWA,EACXE,WAAYA,gBAvCaa,IAAMC","file":"static/js/NearbyLists.1269fd21.chunk.js","sourcesContent":["import { size } from \"lodash\";\nimport React, { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Route as TrimetRoute } from \"../../../api/trimet/types\";\nimport LoadIndicator from \"../../../component/loadIndicator/LoadIndicator\";\nimport { StopLocationsDictionary } from \"../../../store/reducers/stopsReducer\";\nimport { RouteDirectionDict } from \"../../../store/reducers/util/getRoutesFromStopLocations\";\n\nconst NearbyRoutes = lazy(() => import(\"./NearbyRoutes\"));\nconst Stops = lazy(() => import(\"./Stops\"));\n\ninterface Props {\n  stopLocations: StopLocationsDictionary;\n  nearbyRoutes: RouteDirectionDict;\n  openModal: (route: TrimetRoute) => void;\n}\n\ninterface State {\n  modalOpen: boolean;\n  routeInfo: TrimetRoute;\n}\n\nexport default class NearbyLists extends React.Component<Props, State> {\n  public render() {\n    const { stopLocations, nearbyRoutes, openModal } = this.props;\n    const stopCount = size(stopLocations);\n    const routeCount = size(nearbyRoutes);\n\n    /*tslint:disable:jsx-no-lambda*/\n    return (\n      <Suspense fallback={LoadIndicator}>\n        <Switch>\n          <Route\n            path={`/nearby/routes`}\n            render={() => (\n              <NearbyRoutes\n                nearbyRoutes={nearbyRoutes}\n                stopCount={stopCount}\n                routeCount={routeCount}\n              />\n            )}\n          />\n          <Route\n            path={`/nearby/stops`}\n            render={() => (\n              <Stops\n                stopLocations={stopLocations}\n                showArrivals={false}\n                onRouteIndicatorClick={openModal}\n                stopCount={stopCount}\n                routeCount={routeCount}\n              />\n            )}\n          />\n          <Route\n            exact={true}\n            path={`/nearby`}\n            render={() => (\n              <NearbyRoutes\n                nearbyRoutes={nearbyRoutes}\n                stopCount={stopCount}\n                routeCount={routeCount}\n              />\n            )}\n          />\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n"],"sourceRoot":""}