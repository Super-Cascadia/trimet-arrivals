{"version":3,"sources":["component/route/RouteIndicator.tsx","store/selectors/arrivalSelectors.ts","component/arrivalIndicator/util.ts","component/arrivalIndicator/EarlyIndicator.tsx","component/arrivalIndicator/LateIndicator.tsx","component/arrivalIndicator/OnTimeIndicator.tsx","component/arrivalIndicator/TimeToArrivalIndicator.tsx","view/arrivals/components/ArrivalRow.tsx","view/arrivals/util/index.ts","view/arrivals/components/ArrivalRows.tsx","view/arrivals/components/ArrivalsTable.tsx","view/arrivals/components/ArrivalsTableLoadMore.tsx","view/arrivals/components/ArrivalsComponent.tsx","view/arrivals/containers/ArrivalsContainer.tsx","component/buttons/BookmarksButton.tsx","view/stops/containers/StopBookmarkControlContainer.tsx","store/action/bookmarkActions.ts","view/stops/components/StopBookmarkControlComponent.tsx","component/buttons/ReloadButton.tsx","view/stops/components/ReloadIntervalCoordinator.tsx","component/stop/StopLocationIndicator.tsx","view/stops/components/StopRouteListing.tsx","view/stops/components/StopInfo.tsx","view/stops/components/StopsTableHeader.tsx","view/stops/components/StopComponent.tsx","view/stops/containers/StopContainer.tsx"],"names":["RouteIndicator","props","_this","Object","_Users_jnyeholt_code_trimet_arrivals_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_jnyeholt_code_trimet_arrivals_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_jnyeholt_code_trimet_arrivals_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onClick","route","_this$props","routeId","className","verbose","classNames","style","route-indicator-blue","BLUE_LINE_NUMBER","route-indicator-cyan","STREETCAR_A_LOOP","STREETCAR_CL_LINE_SHUTTLE","route-indicator-green","GREEN_LINE_NUMBER","route-indicator-lightgreen","STREETCAR_S_LINE","route-indicator-orange","ORANGE_LINE_NUMBER","route-indicator-pink","STREETCAR_B_LOOP","route-indicator-red","RED_LINE_NUMBER","route-indicator-yellow","YELLOW_LINE_NUMBER","cx","getRouteIndicatorClassName","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","verboseRouteDisplay","routeFound","ROUTE_DISPLAY","react_fontawesome__WEBPACK_IMPORTED_MODULE_7___default","name","getRouteDisplay","React","PureComponent","arrivalsLoadingSelector","createSelector","state","locationId","arrivalsReducer","loading","arrivalsAtStopSelector","arrivals","timeDiff","base","compare","diff","seconds","moment","minutes","remainingTime","minutesDiff","secondsDiff","EarlyIndicator","scheduled","estimated","_timeDiff","_remainingTime","react_default","LateIndicator","OnTimeIndicator","_ref","isSame","estimatedToArriveAtSameTime","isBefore","isEstimatedEarly","EarlyIndicator_EarlyIndicator","LateIndicator_LateIndicator","TimeToArrivalIndicator","now","concat","ArrivalRow","feet","shortSign","onRouteIndicatorClick","scheduledMoment","estimatedMoment","distance","getDistanceUntilArrival","TimeToArrivalIndicator_TimeToArrivalIndicator","getEstimatedScheduledTime","Math","round","scheduledTime","format","estimatedTime","Component","getArrivalRoute","routes","find","ArrivalRows","classCallCheck","possibleConstructorReturn","getPrototypeOf","stopLocation","showAllArrivals","slice","getVisibleArrivals","sortBy","arrival","sortArrivalsByEstimatedTime","map","id","ArrivalRow_ArrivalRow","key","getRows","ArrivalsTable","showMore","classes","arrivals-loading","ArrivalRows_ArrivalRows","ArrivalsTableLoadMore","toggleShowMore","bind","assertThisInitialized","_this$props$loading","arrivalsCount","length","ArrivalsTable_ArrivalsTable","showLoadMoreControl","arrivalCount","additionalArrivals","setState","ArrivalsComponent","loadArrivalData","showArrivals","_this$props2","_this$props2$loading","_this$props2$showArri","ArrivalsTableLoadMore_ArrivalsTableLoadMore","ArrivalsContainer","connect","objectSpread","BookmarkButton","onBookmarkClick","_ref$stopIsBookmarked","stopIsBookmarked","lib_default","color","bookmarkIcon","StopBookmarkControlContainer","bookmarkSections","bookmarkSectionSelectors","stopIsBookmarkedSelector","dispatch","payload","locid","type","REMOVE_BOOKMARK_STOP_REQUEST","BOOKMARK_STOP_REQUEST","bookmarkStopRequest","onBookmarkSectionSelect","bookmarkSectionId","bookmarkSectionSelectRequest","ReloadButton","e","disabled","children","title","spin","size","ReloadIntervalCoordinator","refreshInterval","interval","onReloadClick","setNewInterval","clearIntervalListener","loadData","_this2","setInterval","onInterval","clearInterval","resetLoadCounter","preventDefault","ReloadButton_ReloadButton","StopLocationIndicator","StopRouteListing","expanded","toggleDetails","description","split","desc","dir","getDetailedRouteList","getSimpleRouteList","StopInfo","StopLocationIndicator_StopLocationIndicator","StopRouteListing_StopRouteListing","StopsTableHeader","arrivals-hidden","StopInfo_StopInfo","containers_StopBookmarkControlContainer","ReloadIntervalCoordinator_ReloadIntervalCoordinator","StopComponent","locId","loadArrivals","loadAndSetInterval","StopsTableHeader_StopsTableHeader","containers_ArrivalsContainer","StopContainer","stopLocationSelector","loadArrivalDataRequest"],"mappings":"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","file":"static/js/0.a896ec18.chunk.js","sourcesContent":["import cx from \"classnames\";\nimport React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport {\n  BLUE_LINE_NUMBER,\n  GREEN_LINE_NUMBER,\n  ORANGE_LINE_NUMBER,\n  RED_LINE_NUMBER,\n  ROUTE_DISPLAY,\n  STREETCAR_A_LOOP,\n  STREETCAR_B_LOOP,\n  STREETCAR_CL_LINE_SHUTTLE,\n  STREETCAR_S_LINE,\n  YELLOW_LINE_NUMBER\n} from \"../../api/trimet/constants\";\nimport { Route } from \"../../api/trimet/types\";\nimport \"./RouteIndicator.scss\";\n\ninterface Props {\n  routeId: number;\n  route: Route;\n  className?: string;\n  onClick: (route: Route) => void;\n  verbose?: boolean;\n}\n\nfunction getRouteDisplay(route: number, verboseRouteDisplay: boolean) {\n  const routeFound = ROUTE_DISPLAY[route];\n\n  if (!routeFound) {\n    if (route) {\n      return (\n        <span>\n          <FontAwesome name=\"bus\" className=\"train-route-indicator\" />\n          <span>\n            {route} {verboseRouteDisplay && \"Bus\"}\n          </span>\n        </span>\n      );\n    }\n    return route || \"-\";\n  } else {\n    return (\n      <span>\n        <FontAwesome name=\"train\" className=\"train-route-indicator\" />\n        <span>{routeFound}</span>\n      </span>\n    );\n  }\n}\n\nfunction getRouteIndicatorClassName(route: number, className: string) {\n  const style = {\n    \"route-indicator-blue\": route === BLUE_LINE_NUMBER,\n    \"route-indicator-cyan\":\n      route === STREETCAR_A_LOOP || route === STREETCAR_CL_LINE_SHUTTLE,\n    \"route-indicator-green\": route === GREEN_LINE_NUMBER,\n    \"route-indicator-lightgreen\": route === STREETCAR_S_LINE,\n    \"route-indicator-orange\": route === ORANGE_LINE_NUMBER,\n    \"route-indicator-pink\": route === STREETCAR_B_LOOP,\n    \"route-indicator-red\": route === RED_LINE_NUMBER,\n    \"route-indicator-yellow\": route === YELLOW_LINE_NUMBER\n  };\n\n  return cx(\"route-indicator\", className, style);\n}\n\nexport default class RouteIndicator extends React.PureComponent<Props> {\n  private onClick: () => void;\n\n  constructor(props) {\n    super(props);\n\n    this.onClick = () => this.props.onClick(this.props.route);\n  }\n\n  public render() {\n    const { routeId, className, verbose } = this.props;\n    const classNames = getRouteIndicatorClassName(routeId, className);\n\n    return (\n      <span className={classNames} onClick={this.onClick}>\n        {getRouteDisplay(routeId, verbose)}\n      </span>\n    );\n  }\n}\n","import { createSelector } from \"reselect\";\nimport { Arrival } from \"../../api/trimet/types\";\nimport { RootState } from \"../reducers\";\n\nconst arrivalsAtStopLoadingState = (state: RootState, locationId: number) =>\n  state.arrivalsReducer.loading[locationId];\n\nconst arrivalsAtStop = (state: RootState, locationId: number) =>\n  state.arrivalsReducer.arrivals[locationId];\n\nexport const arrivalsLoadingSelector = createSelector(\n  arrivalsAtStopLoadingState,\n  (loading: boolean) => loading\n);\n\nexport const arrivalsAtStopSelector = createSelector(\n  arrivalsAtStop,\n  (arrivals: Arrival[]) => arrivals\n);\n","import moment, { Moment } from \"moment\";\n\nexport function timeDiff(base: Moment, compare: Moment) {\n  const diff = base.diff(compare);\n  const seconds = moment(diff).seconds();\n  const minutes = moment(diff).minutes();\n\n  return { seconds, minutes };\n}\n\nexport function remainingTime(minutes, seconds) {\n  const minutesDiff = 59 - minutes;\n  const secondsDiff = 60 - seconds;\n\n  return {\n    minutesDiff,\n    secondsDiff\n  };\n}\n","import { Moment } from \"moment\";\nimport React from \"react\";\nimport \"./Indicator.css\";\nimport { remainingTime, timeDiff } from \"./util\";\n\ninterface Props {\n  scheduled: Moment;\n  estimated: Moment;\n}\n\nexport default class EarlyIndicator extends React.PureComponent<Props> {\n  public render() {\n    const { scheduled, estimated } = this.props;\n\n    if (scheduled && estimated) {\n      const { seconds, minutes } = timeDiff(estimated, scheduled);\n      const { secondsDiff, minutesDiff } = remainingTime(minutes, seconds);\n\n      if (minutesDiff === 0) {\n        return (\n          <span className=\"arrival-estimated-early\">{secondsDiff}s early</span>\n        );\n      }\n\n      return (\n        <span className=\"arrival-estimated-early\">\n          {59 - minutes}m {60 - seconds}s early\n        </span>\n      );\n    }\n\n    return \"-\";\n  }\n}\n","import { Moment } from \"moment\";\nimport React from \"react\";\nimport \"./Indicator.css\";\nimport { remainingTime, timeDiff } from \"./util\";\n\ninterface Props {\n  scheduled: Moment;\n  estimated: Moment;\n}\n\nexport default class LateIndicator extends React.PureComponent<Props> {\n  public render() {\n    const { scheduled, estimated } = this.props;\n\n    if (scheduled && estimated) {\n      const { seconds, minutes } = timeDiff(scheduled, estimated);\n      const { secondsDiff, minutesDiff } = remainingTime(minutes, seconds);\n\n      if (minutesDiff === 0) {\n        return (\n          <span className=\"arrival-estimated-late\">{secondsDiff}s late</span>\n        );\n      }\n\n      return (\n        <span className=\"arrival-estimated-late\">\n          {minutesDiff}m {secondsDiff}s late\n        </span>\n      );\n    }\n\n    return \"-\";\n  }\n}\n","import { Moment } from \"moment\";\nimport React from \"react\";\nimport EarlyIndicator from \"./EarlyIndicator\";\nimport LateIndicator from \"./LateIndicator\";\n\ninterface Props {\n  scheduled: Moment;\n  estimated: Moment;\n}\n\nexport function isEstimatedEarly(scheduled: Moment, estimated: Moment) {\n  return estimated.isBefore(scheduled);\n}\n\nexport function estimatedToArriveAtSameTime(\n  scheduled: Moment,\n  estimated: Moment\n) {\n  return scheduled.isSame(estimated);\n}\n\nexport default function OnTimeIndicator({ scheduled, estimated }: Props) {\n  if (scheduled && estimated) {\n    if (estimatedToArriveAtSameTime(scheduled, estimated)) {\n      return <span className=\"arrival-on-time\"> On time</span>;\n    } else {\n      if (isEstimatedEarly(scheduled, estimated)) {\n        return <EarlyIndicator scheduled={scheduled} estimated={estimated} />;\n      } else {\n        return <LateIndicator scheduled={scheduled} estimated={estimated} />;\n      }\n    }\n  }\n\n  return null;\n}\n","import { Moment } from \"moment\";\nimport React from \"react\";\nimport \"./Indicator.css\";\nimport { timeDiff } from \"./util\";\n\ninterface Props {\n  estimated: Moment;\n  now: Moment;\n}\n\nexport default class TimeToArrivalIndicator extends React.PureComponent<Props> {\n  public render() {\n    const { estimated, now } = this.props;\n\n    if (estimated && now) {\n      const { seconds, minutes } = timeDiff(estimated, now);\n\n      if (minutes === 0) {\n        return `${seconds}s`;\n      }\n\n      return `${minutes}m ${seconds}s`;\n    }\n\n    return \"-\";\n  }\n}\n","import moment, { Moment } from \"moment\";\nimport React from \"react\";\nimport { Route } from \"../../../api/trimet/types\";\nimport OnTimeIndicator from \"../../../component/arrivalIndicator/OnTimeIndicator\";\nimport TimeToArrivalIndicator from \"../../../component/arrivalIndicator/TimeToArrivalIndicator\";\nimport RouteIndicator from \"../../../component/route/RouteIndicator\";\nimport { getDistanceUntilArrival } from \"../util\";\nimport \"./Arrivals.css\";\n\ninterface Props {\n  scheduled: number;\n  estimated: number;\n  feet: number;\n  routeId: number;\n  shortSign: string;\n  now: Moment;\n  onRouteIndicatorClick: (route: Route) => void;\n  route: Route;\n}\n\nexport default class ArrivalRow extends React.Component<Props> {\n  public static getEstimatedScheduledTime(\n    scheduled: Moment,\n    estimated: Moment\n  ) {\n    const scheduledTime = scheduled.format(\"h:mm:ss a\");\n    const estimatedTime = estimated.format(\"h:mm:ss a\");\n\n    return `${estimatedTime} / ${scheduledTime}`;\n  }\n\n  public render() {\n    const {\n      scheduled,\n      estimated,\n      feet,\n      routeId,\n      shortSign,\n      now,\n      onRouteIndicatorClick,\n      route\n    } = this.props;\n    const scheduledMoment = moment(scheduled);\n    const estimatedMoment = moment(estimated);\n    const distance = getDistanceUntilArrival(feet);\n\n    return (\n      <tr>\n        <td className=\"route-indicator-column\">\n          <RouteIndicator\n            routeId={routeId}\n            onClick={onRouteIndicatorClick}\n            route={route}\n          />\n        </td>\n        <td className=\"short-sign\">{shortSign}</td>\n        <td>\n          <TimeToArrivalIndicator estimated={estimatedMoment} now={now} />\n        </td>\n        <td>\n          <OnTimeIndicator\n            scheduled={scheduledMoment}\n            estimated={estimatedMoment}\n          />\n        </td>\n        <td className=\"estimated-scheduled-time\">\n          {ArrivalRow.getEstimatedScheduledTime(\n            scheduledMoment,\n            estimatedMoment\n          )}\n        </td>\n        <td className=\"distance-in-miles\">{Math.round(distance)} miles</td>\n      </tr>\n    );\n  }\n}\n","export function getDistanceUntilArrival(feet: number): number {\n  const MILE = 5280;\n\n  return feet && feet < MILE ? MILE / feet : feet && feet / MILE;\n}\n","import { sortBy } from \"lodash\";\nimport { Moment } from \"moment\";\nimport React from \"react\";\nimport { Arrival, Route, StopLocation } from \"../../../api/trimet/types\";\nimport ArrivalRow from \"./ArrivalRow\";\nimport \"./Arrivals.css\";\n\nfunction sortArrivalsByEstimatedTime(arrivals: Arrival[]): Arrival[] {\n  return sortBy(arrivals, (arrival: Arrival) => arrival.estimated);\n}\n\nfunction getArrivalRoute(routes: Route[], routeId: number) {\n  return routes.find((route: Route) => route.route === routeId);\n}\n\nfunction getVisibleArrivals(\n  arrivals: Arrival[],\n  showAllArrivals: boolean\n): Arrival[] {\n  return showAllArrivals ? arrivals : arrivals.slice(0, 5);\n}\n\ninterface Props {\n  arrivals: Arrival[];\n  now: Moment;\n  onClick: (route: Route) => void;\n  stopLocation: StopLocation;\n  showAllArrivals: boolean;\n}\n\nexport default class ArrivalRows extends React.Component<Props> {\n  public static getRows(\n    arrivals: Arrival[],\n    now,\n    onClick,\n    stopLocation: StopLocation,\n    showAllArrivals: boolean\n  ) {\n    const sortedArrivals = sortArrivalsByEstimatedTime(arrivals);\n    const visibleArrivals = getVisibleArrivals(sortedArrivals, showAllArrivals);\n\n    return visibleArrivals.map((arrival: Arrival) => {\n      const {\n        scheduled,\n        estimated,\n        feet,\n        route: routeId,\n        shortSign,\n        id\n      } = arrival;\n\n      return (\n        <ArrivalRow\n          key={id}\n          estimated={estimated}\n          feet={feet}\n          scheduled={scheduled}\n          routeId={routeId}\n          shortSign={shortSign}\n          now={now}\n          route={getArrivalRoute(stopLocation.route, routeId)}\n          onRouteIndicatorClick={onClick}\n        />\n      );\n    });\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      arrivals,\n      now,\n      onClick,\n      stopLocation,\n      showAllArrivals\n    } = this.props;\n\n    return (\n      <tbody>\n        {ArrivalRows.getRows(\n          arrivals,\n          now,\n          onClick,\n          stopLocation,\n          showAllArrivals\n        )}\n      </tbody>\n    );\n  }\n}\n","import classNames from \"classnames\";\nimport { Moment } from \"moment\";\nimport React from \"react\";\nimport { Arrival, Route, StopLocation } from \"../../../api/trimet/types\";\nimport ArrivalRows from \"./ArrivalRows\";\nimport \"./Arrivals.css\";\n\ninterface Props {\n  arrivals: Arrival[];\n  loading: boolean;\n  now: Moment;\n  onRouteIndicatorClick: (route: Route) => void;\n  stopLocation: StopLocation;\n  showMore: boolean;\n}\n\nexport default class ArrivalsTable extends React.Component<Props> {\n  public render() {\n    const {\n      arrivals,\n      loading,\n      now,\n      onRouteIndicatorClick: onClick,\n      stopLocation,\n      showMore\n    } = this.props;\n\n    if (!arrivals) {\n      return null;\n    }\n\n    const classes = classNames(\"arrivals-table\", {\n      \"arrivals-loading\": loading\n    });\n\n    return (\n      <table className={classes}>\n        <thead>\n          <tr>\n            <th />\n            <th>Name</th>\n            <th>Arrival</th>\n            <th>On Time</th>\n            <th>Estimated / Scheduled</th>\n            <th>Distance</th>\n          </tr>\n        </thead>\n        <ArrivalRows\n          arrivals={arrivals}\n          onClick={onClick}\n          stopLocation={stopLocation}\n          now={now}\n          showAllArrivals={showMore}\n        />\n      </table>\n    );\n  }\n}\n","import { Moment } from \"moment\";\nimport React from \"react\";\nimport { Arrival, Route, StopLocation } from \"../../../api/trimet/types\";\nimport \"./Arrivals.css\";\nimport ArrivalsTable from \"./ArrivalsTable\";\n\ninterface Props {\n  loading: boolean;\n  arrivals: Arrival[];\n  now: Moment;\n  stopLocation: StopLocation;\n  onRouteIndicatorClick: (route: Route) => void;\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class ArrivalsTableLoadMore extends React.Component<\n  Props,\n  State\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showMore: false\n    };\n\n    this.toggleShowMore = this.toggleShowMore.bind(this);\n  }\n\n  public render() {\n    const {\n      arrivals,\n      loading = true,\n      now,\n      onRouteIndicatorClick,\n      stopLocation\n    } = this.props;\n    const { showMore } = this.state;\n    const arrivalsCount = arrivals && arrivals.length;\n\n    return (\n      <div className=\"arrivals-wrapper\">\n        <ArrivalsTable\n          arrivals={arrivals}\n          loading={loading}\n          now={now}\n          onRouteIndicatorClick={onRouteIndicatorClick}\n          stopLocation={stopLocation}\n          showMore={showMore}\n        />\n        {arrivalsCount > 5 && this.showLoadMoreControl(showMore, arrivalsCount)}\n      </div>\n    );\n  }\n\n  private showLoadMoreControl(showMore: boolean, arrivalCount: number) {\n    const additionalArrivals = arrivalCount - 5;\n\n    return (\n      <div className=\"arrivals-load-more-control\">\n        <div className=\"load-more-flex-container\">\n          {showMore && (\n            <button onClick={this.toggleShowMore}>Only show 5 arrivals</button>\n          )}\n          {!showMore && (\n            <button onClick={this.toggleShowMore}>\n              Show {additionalArrivals} more arrivals\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  private toggleShowMore() {\n    this.setState({\n      showMore: !this.state.showMore\n    });\n  }\n}\n","import { Moment } from \"moment\";\nimport React from \"react\";\nimport { Arrival, Route, StopLocation } from \"../../../api/trimet/types\";\nimport { LoadArrivalData } from \"../../../store/action/stopActions\";\nimport \"../Arrivals.css\";\nimport ArrivalsTableLoadMore from \"./ArrivalsTableLoadMore\";\n\ninterface Props {\n  loading: boolean;\n  locationId: number;\n  arrivals: Arrival[];\n  loadArrivalData: LoadArrivalData;\n  showArrivals: boolean;\n  now: Moment;\n  stopLocation: StopLocation;\n  onRouteIndicatorClick: (route: Route) => void;\n}\n\nexport default class ArrivalsComponent extends React.Component<Props> {\n  public componentDidMount() {\n    const { loadArrivalData, locationId, showArrivals } = this.props;\n\n    if (showArrivals) {\n      loadArrivalData(locationId);\n    }\n  }\n  public render() {\n    const {\n      arrivals,\n      loading = true,\n      showArrivals = true,\n      now,\n      onRouteIndicatorClick,\n      stopLocation\n    } = this.props;\n\n    return (\n      <div className=\"arrivals-wrapper\">\n        {!loading && showArrivals && !arrivals && (\n          <p className=\"no-arrivals\">No arrivals available.</p>\n        )}\n        {showArrivals && arrivals && (\n          <ArrivalsTableLoadMore\n            arrivals={arrivals}\n            loading={loading}\n            now={now}\n            onRouteIndicatorClick={onRouteIndicatorClick}\n            stopLocation={stopLocation}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"../../../api/trimet/types\";\nimport { LoadArrivalData } from \"../../../store/action/stopActions\";\nimport { RootState } from \"../../../store/reducers\";\nimport {\n  arrivalsAtStopSelector,\n  arrivalsLoadingSelector\n} from \"../../../store/selectors/arrivalSelectors\";\nimport ArrivalsComponent from \"../components/ArrivalsComponent\";\n\ninterface Props {\n  locationId: number;\n  showArrivals: boolean;\n  loadArrivalData: LoadArrivalData;\n  onRouteIndicatorClick: (route: Route) => void;\n}\n\nconst mapStateToProps = (state: RootState, props: Props) => {\n  const { locationId } = props;\n  const now = moment();\n\n  return {\n    ...props,\n    arrivals: arrivalsAtStopSelector(state, locationId),\n    loading: arrivalsLoadingSelector(state, locationId),\n    locationId,\n    now\n  };\n};\n\nconst ArrivalsContainer = connect(\n  mapStateToProps,\n  () => ({})\n)(ArrivalsComponent);\n\nexport default ArrivalsContainer;\n","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { StopLocation } from \"../../api/trimet/types\";\nimport { BookmarkSectionsProps } from \"../../store/reducers/bookmarkSectionReducer\";\nimport \"./BookmarksButton.css\";\n\nfunction bookmarkIcon(stopIsBookmarked: boolean) {\n  if (stopIsBookmarked) {\n    const style = {\n      color: \"red\"\n    };\n\n    return (\n      <FontAwesome\n        className=\"bookmarked\"\n        name=\"bookmark\"\n        color=\"red\"\n        style={style}\n      />\n    );\n  }\n\n  return <FontAwesome className=\"not-bookmarked\" name=\"bookmark\" />;\n}\n\nexport type BookmarkClick = (\n  stopLocation: StopLocation,\n  stopIsBookmarked: boolean\n) => void;\n\nexport type BookmarkSectionClick = (\n  selectedBookmarkSection: number,\n  stopLocation: StopLocation\n) => void;\n\ninterface Props {\n  stopLocation: StopLocation;\n  onBookmarkClick: BookmarkClick;\n  stopIsBookmarked: boolean;\n  bookmarkSections: BookmarkSectionsProps;\n  onBookmarkSectionSelect: BookmarkSectionClick;\n}\n\nexport default function BookmarkButton({\n  onBookmarkClick,\n  stopLocation,\n  stopIsBookmarked = false\n}: Props) {\n  const onClick =\n    onBookmarkClick &&\n    onBookmarkClick.bind(this, stopLocation, stopIsBookmarked);\n  return (\n    <div className=\"bookmark-button-container\">\n      <button onClick={onClick} className=\"bookmark-button\">\n        {bookmarkIcon(stopIsBookmarked)}\n      </button>\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { StopLocation } from \"../../../api/trimet/types\";\nimport {\n  bookmarkStopRequest,\n  removeStopBookmarkRequest\n} from \"../../../store/action/bookmarkActions\";\nimport { bookmarkSectionSelectRequest } from \"../../../store/action/bookmarkSectionActions\";\nimport { RootState } from \"../../../store/reducers\";\nimport { bookmarkSectionSelectors } from \"../../../store/selectors/bookmarkSectionSelectors\";\nimport { stopIsBookmarkedSelector } from \"../../../store/selectors/bookmarkSelectors\";\nimport StopBookmarkControlComponent from \"../components/StopBookmarkControlComponent\";\n\ninterface Props {\n  locationId: number;\n}\n\nconst mapStateToProps = (state: RootState, props: Props) => {\n  return {\n    ...props,\n    bookmarkSections: bookmarkSectionSelectors(state),\n    stopIsBookmarked: stopIsBookmarkedSelector(state, props.locationId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onBookmarkClick(stopLocation: StopLocation, stopIsBookmarked: boolean) {\n      if (stopIsBookmarked) {\n        dispatch(removeStopBookmarkRequest(stopLocation.locid));\n      } else {\n        dispatch(bookmarkStopRequest(stopLocation));\n      }\n    },\n    onBookmarkSectionSelect(\n      bookmarkSectionId: number,\n      stopLocation: StopLocation\n    ) {\n      dispatch(bookmarkSectionSelectRequest(bookmarkSectionId, stopLocation));\n    }\n  };\n};\n\nconst StopBookmarkControlContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StopBookmarkControlComponent);\n\nexport default StopBookmarkControlContainer;\n","import { StopLocation } from \"../../api/trimet/types\";\nimport {\n  BOOKMARK_STOP_REQUEST,\n  REMOVE_BOOKMARK_STOP_REQUEST\n} from \"../constants\";\n\nexport const bookmarkStopRequest = (stopLocation: StopLocation) => ({\n  payload: { stopLocation },\n  type: BOOKMARK_STOP_REQUEST\n});\n\nexport const removeStopBookmarkRequest = (locationId: number) => ({\n  payload: { locationId },\n  type: REMOVE_BOOKMARK_STOP_REQUEST\n});\n","import React from \"react\";\nimport BookmarkButton, {\n  BookmarkClick,\n  BookmarkSectionClick\n} from \"../../../component/buttons/BookmarksButton\";\nimport { BookmarkSectionsProps } from \"../../../store/reducers/bookmarkSectionReducer\";\nimport { StopLocationWithDistance } from \"../../../store/reducers/stopsReducer\";\n\ninterface Props {\n  stopLocation: StopLocationWithDistance;\n  onBookmarkClick: BookmarkClick;\n  stopIsBookmarked: boolean;\n  bookmarkSections: BookmarkSectionsProps;\n  onBookmarkSectionSelect: BookmarkSectionClick;\n}\n\nexport default function StopBookmarkControlComponent(props: Props) {\n  const {\n    onBookmarkClick,\n    stopLocation,\n    stopIsBookmarked,\n    bookmarkSections,\n    onBookmarkSectionSelect\n  } = props;\n\n  return (\n    <BookmarkButton\n      onBookmarkClick={onBookmarkClick}\n      stopLocation={stopLocation}\n      stopIsBookmarked={stopIsBookmarked}\n      bookmarkSections={bookmarkSections}\n      onBookmarkSectionSelect={onBookmarkSectionSelect}\n    />\n  );\n}\n","import cx from \"classnames\";\nimport React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\n\ninterface Props {\n  onClick: (e) => void;\n  disabled: boolean;\n  className?: string;\n  children?: any;\n}\n\nexport default class ReloadButton extends React.PureComponent<Props> {\n  private onClick: (e) => void;\n\n  constructor(props) {\n    super(props);\n\n    this.onClick = e => props.onClick(e);\n  }\n  public render() {\n    const { disabled, className, children } = this.props;\n    const classes = cx(\"reload-button\", className);\n\n    return (\n      <button\n        disabled={disabled}\n        title=\"Reload arrivals for stop\"\n        className={classes}\n        onClick={this.onClick}\n      >\n        {disabled && <FontAwesome name=\"refresh\" spin={true} size=\"2x\" />}\n        {!disabled && <FontAwesome name=\"refresh\" size=\"2x\" />}\n        {children}\n      </button>\n    );\n  }\n}\n","import React from \"react\";\nimport { StopLocation } from \"../../../api/trimet/types\";\nimport ReloadButton from \"../../../component/buttons/ReloadButton\";\nimport { LoadArrivalData } from \"../../../store/action/stopActions\";\nimport \"../Stops.scss\";\n\ntype Event = React.MouseEvent<HTMLElement>;\n\ninterface Props {\n  stopLocation: StopLocation;\n  loadArrivalData: LoadArrivalData;\n  loading: boolean;\n  showArrivals: boolean;\n}\n\ninterface State {\n  interval: number;\n}\n\nconst ONE_SECOND = 1000;\nconst THIRTY = 30;\n\nexport default class ReloadIntervalCoordinator extends React.Component<\n  Props,\n  State\n> {\n  public refreshInterval: {};\n  private onClick: (e: Event) => void;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      interval: 30\n    };\n\n    this.onClick = (e: Event) => this.onReloadClick(e);\n  }\n\n  public componentDidMount() {\n    const { showArrivals } = this.props;\n\n    if (showArrivals) {\n      this.setNewInterval();\n    }\n  }\n\n  public componentWillUnmount() {\n    const { showArrivals } = this.props;\n\n    if (showArrivals) {\n      this.clearIntervalListener();\n    }\n  }\n\n  public onInterval() {\n    const { interval } = this.state;\n\n    if (interval === 0) {\n      this.loadData();\n    } else {\n      this.setState({ interval: interval - 1 });\n    }\n  }\n\n  public setNewInterval() {\n    this.refreshInterval = setInterval(() => this.onInterval(), ONE_SECOND);\n  }\n\n  public clearIntervalListener() {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval as number);\n    }\n  }\n\n  public resetLoadCounter() {\n    this.clearIntervalListener();\n    this.setState({ interval: THIRTY });\n  }\n\n  public loadData() {\n    const { loadArrivalData, stopLocation } = this.props;\n\n    this.resetLoadCounter();\n    this.setNewInterval();\n    loadArrivalData(stopLocation.locid);\n  }\n\n  public onReloadClick(e: Event): void {\n    e.preventDefault();\n    this.loadData();\n  }\n\n  public render() {\n    const { stopLocation, loading, showArrivals = true } = this.props;\n\n    if (!stopLocation) {\n      return null;\n    }\n\n    return (\n      <div className=\"stops-reload-button\">\n        {showArrivals && (\n          <ReloadButton onClick={this.onClick} disabled={loading}>\n            <span className=\"count-down-label\">{this.state.interval}</span>\n          </ReloadButton>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./StopLocationIndicator.css\";\n\ninterface Props {\n  locationId: number;\n}\n\nexport default function StopLocationIndicator({ locationId }: Props) {\n  return <span className=\"stop-location-indicator\">{locationId}</span>;\n}\n","import { map, split } from \"lodash\";\nimport React, { Component } from \"react\";\nimport { Route } from \"../../../api/trimet/types\";\nimport RouteIndicator from \"../../../component/route/RouteIndicator\";\nimport \"./StopRouteListing.css\";\n\nfunction getSimpleRouteList(routes: Route[], onClick) {\n  return map(routes, (route: Route) => {\n    return (\n      <RouteIndicator\n        key={route.route}\n        routeId={route.route}\n        route={route}\n        onClick={onClick}\n        className=\"header-router-indicator\"\n      />\n    );\n  });\n}\n\nfunction getDetailedRouteList(routes: Route[], onClick) {\n  return map(routes, (route: Route) => {\n    const description = split(route.desc, \"-\")[1];\n\n    return (\n      <li className=\"route-detail-list-item\">\n        <RouteIndicator\n          key={route.route}\n          routeId={route.route}\n          route={route}\n          onClick={onClick}\n          className=\"header-router-indicator\"\n        />\n        <span className=\"route-description\">\n          <span>{description}</span>\n          <span className=\"route-description-divider\">-</span>\n          <span>{route.dir[0].desc}</span>\n        </span>\n      </li>\n    );\n  });\n}\n\ninterface Props {\n  routes: Route[];\n  onClick: (route: Route) => void;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class StopRouteListing extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    };\n\n    this.toggleDetails = this.toggleDetails.bind(this);\n  }\n\n  public toggleDetails() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n\n  public render() {\n    const { routes, onClick } = this.props;\n    const { expanded } = this.state;\n\n    if (expanded) {\n      return (\n        <div>\n          <button onClick={this.toggleDetails}>Details</button>\n          <ul className=\"route-detail-list\">\n            {getDetailedRouteList(routes, onClick)}\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <span className=\"serving-label\">Routes: </span>\n        <span className=\"route-indicators\">\n          {getSimpleRouteList(routes, onClick)}\n        </span>\n        <button onClick={this.toggleDetails}>Details</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route } from \"../../../api/trimet/types\";\nimport StopLocationIndicator from \"../../../component/stop/StopLocationIndicator\";\nimport { StopLocationWithDistance } from \"../../../store/reducers/stopsReducer\";\nimport \"./StopInfo.css\";\nimport StopRouteListing from \"./StopRouteListing\";\n\ninterface Props {\n  stopLocation: StopLocationWithDistance;\n  onClick: (route: Route) => void;\n}\n\nexport default function StopInfo({ stopLocation, onClick }: Props) {\n  if (!stopLocation) {\n    return null;\n  }\n\n  return (\n    <div className=\"stop-info-header\">\n      <h2>\n        <StopLocationIndicator locationId={stopLocation.locid} />\n        <span className=\"stop-info\">\n          {stopLocation.desc} - {stopLocation.dir} -\n        </span>\n        <span>{stopLocation.distance} feet away</span>\n      </h2>\n      <StopRouteListing routes={stopLocation.route} onClick={onClick} />\n    </div>\n  );\n}\n","import cx from \"classnames\";\nimport React from \"react\";\nimport { Route } from \"../../../api/trimet/types\";\nimport { LoadArrivalData } from \"../../../store/action/stopActions\";\nimport { StopLocationWithDistance } from \"../../../store/reducers/stopsReducer\";\nimport StopBookmarkControlContainer from \"../containers/StopBookmarkControlContainer\";\nimport ReloadIntervalCoordinator from \"./ReloadIntervalCoordinator\";\nimport StopInfo from \"./StopInfo\";\nimport \"./StopsTableHeader.css\";\n\ninterface Props {\n  stopLocation: StopLocationWithDistance;\n  loadArrivalData: LoadArrivalData;\n  loading: boolean;\n  showArrivals: boolean;\n  onRouteIndicatorClick: (route: Route) => void;\n  locationId: number;\n}\n\nexport default function StopsTableHeader(props: Props) {\n  const {\n    stopLocation,\n    loading,\n    showArrivals,\n    loadArrivalData,\n    onRouteIndicatorClick,\n    locationId\n  } = props;\n\n  if (!stopLocation) {\n    return null;\n  }\n\n  const classNames = cx(\"stops-header\", {\n    \"arrivals-hidden\": !showArrivals\n  });\n\n  return (\n    <div className={classNames}>\n      <StopInfo stopLocation={stopLocation} onClick={onRouteIndicatorClick} />\n      <div className=\"stop-control-section\">\n        <StopBookmarkControlContainer\n          locationId={locationId}\n          stopLocation={stopLocation}\n        />\n        <ReloadIntervalCoordinator\n          stopLocation={stopLocation}\n          loadArrivalData={loadArrivalData}\n          loading={loading}\n          showArrivals={showArrivals}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"../../../api/trimet/types\";\nimport { StopLocationWithDistance } from \"../../../store/reducers/stopsReducer\";\nimport ArrivalsContainer from \"../../arrivals/containers/ArrivalsContainer\";\nimport \"../Stops.scss\";\nimport StopsTableHeader from \"./StopsTableHeader\";\n\ninterface Props {\n  stopLocation: StopLocationWithDistance;\n  loadArrivalData: (locationId: number) => TimerHandler;\n  locationId: number;\n  loading: boolean;\n  showArrivals: boolean;\n  onRouteIndicatorClick?: (route: Route) => void;\n}\n\nconst interval = 30000;\n\nexport default class StopComponent extends React.Component<Props> {\n  public refreshInterval: {};\n  private loadArrivalData: (locId: number) => void;\n\n  constructor(props) {\n    super(props);\n\n    this.loadArrivalData = (locId: number) => this.loadArrivals(locId);\n  }\n\n  public loadAndSetInterval(locationId: number) {\n    const { loadArrivalData } = this.props;\n    loadArrivalData(locationId);\n    this.refreshInterval = setInterval(loadArrivalData(locationId), interval);\n  }\n\n  public loadArrivals(locationId: number) {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval as number);\n    }\n    this.loadAndSetInterval(locationId);\n  }\n\n  public render() {\n    const {\n      stopLocation,\n      locationId,\n      loading,\n      showArrivals,\n      onRouteIndicatorClick\n    } = this.props;\n\n    return (\n      <article className=\"stop\">\n        <StopsTableHeader\n          stopLocation={stopLocation}\n          loadArrivalData={this.loadArrivalData}\n          loading={loading}\n          showArrivals={showArrivals}\n          onRouteIndicatorClick={onRouteIndicatorClick}\n          locationId={locationId}\n        />\n        {showArrivals && (\n          <ArrivalsContainer\n            locationId={locationId}\n            showArrivals={showArrivals}\n            loadArrivalData={this.loadArrivalData}\n            onRouteIndicatorClick={onRouteIndicatorClick}\n            stopLocation={stopLocation}\n          />\n        )}\n      </article>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport { loadArrivalDataRequest } from \"../../../store/action/stopActions\";\nimport { RootState } from \"../../../store/reducers\";\nimport { arrivalsLoadingSelector } from \"../../../store/selectors/arrivalSelectors\";\nimport { stopLocationSelector } from \"../../../store/selectors/stopSelectors\";\nimport StopComponent from \"../components/StopComponent\";\n\ninterface Props {\n  locationId: number;\n  showArrivals: boolean;\n  onRouteIndicatorClick?: () => void;\n}\n\nconst mapStateToProps = (state: RootState, props: Props) => {\n  return {\n    ...props,\n    loading: arrivalsLoadingSelector(state, props.locationId),\n    stopLocation: stopLocationSelector(state, props.locationId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadArrivalData(locationId: number): void {\n      dispatch(loadArrivalDataRequest(locationId));\n    }\n  };\n};\n\nconst StopContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StopComponent);\n\nexport default StopContainer;\n"],"sourceRoot":""}